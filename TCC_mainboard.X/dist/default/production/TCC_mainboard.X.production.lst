

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Oct 07 11:55:42 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0008                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  000E                     	;# 
    39  000E                     	;# 
    40  000F                     	;# 
    41  0010                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0014                     	;# 
    46  0015                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  001D                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0087                     	;# 
    63  0088                     	;# 
    64  0089                     	;# 
    65  008C                     	;# 
    66  008D                     	;# 
    67  008E                     	;# 
    68  0091                     	;# 
    69  0092                     	;# 
    70  0093                     	;# 
    71  0094                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  010C                     	;# 
    79  010D                     	;# 
    80  010E                     	;# 
    81  010F                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144                           
   145                           	psect	idataBANK0
   146  01C1                     __pidataBANK0:	
   147                           
   148                           ;initializer for _Tensao
   149  01C1  347B               	retlw	123
   150  01C2  347A               	retlw	122
   151  01C3  3400               	retlw	0
   152                           
   153                           	psect	nvBANK0
   154  004C                     __pnvBANK0:	
   155  004C                     _TemporizadorSerialW:	
   156  004C                     	ds	2
   157  004E                     _ModuloCM:	
   158  004E                     	ds	9
   159  000B                     _INTCON	set	11
   160  000B                     _INTCONbits	set	11
   161  000C                     _PIR1bits	set	12
   162  0006                     _PORTB	set	6
   163  0006                     _PORTBbits	set	6
   164  0008                     _PORTD	set	8
   165  0008                     _PORTDbits	set	8
   166  001A                     _RCREG	set	26
   167  0018                     _RCSTA	set	24
   168  0014                     _SSPCON	set	20
   169  0001                     _TMR0	set	1
   170  0019                     _TXREG	set	25
   171  0081                     _OPTION_REG	set	129
   172  008C                     _PIE1bits	set	140
   173  0099                     _SPBRG	set	153
   174  0093                     _SSPADD	set	147
   175  0091                     _SSPCON2	set	145
   176  0091                     _SSPCON2bits	set	145
   177  0094                     _SSPSTAT	set	148
   178  0086                     _TRISB	set	134
   179  0088                     _TRISD	set	136
   180  0098                     _TXSTA	set	152
   181  0098                     _TXSTAbits	set	152
   182  043B                     _TRISC3	set	1083
   183  043C                     _TRISC4	set	1084
   184                           
   185                           ; #config settings
   186  0000                     
   187                           	psect	cinit
   188  0185                     start_initialization:	
   189  0185                     __initialization:	
   190                           
   191                           ; Clear objects allocated to COMMON
   192  0185  01FC               	clrf	__pbssCOMMON& (0+127)
   193  0186  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   194                           
   195                           ; Clear objects allocated to BANK0
   196  0187  1383               	bcf	3,7	;select IRP bank0
   197  0188  3020               	movlw	low __pbssBANK0
   198  0189  0084               	movwf	4
   199  018A  304C               	movlw	low (__pbssBANK0+44)
   200  018B  120A  118A  21B9   	fcall	clear_ram0
      +       120A  118A         
   201                           
   202                           ; Initialize objects allocated to BANK0
   203  0190  120A  118A  21C1   	fcall	__pidataBANK0	;fetch initializer
      +       120A  118A         
   204  0195  00DC               	movwf	__pdataBANK0& (0+127)
   205  0196  120A  118A  21C2   	fcall	__pidataBANK0+1	;fetch initializer
      +       120A  118A         
   206  019B  00DD               	movwf	(__pdataBANK0+1)& (0+127)
   207  019C  120A  118A  21C3   	fcall	__pidataBANK0+2	;fetch initializer
   208  019F  00DE               	movwf	(__pdataBANK0+2)& (0+127)
   209  01A0                     end_of_initialization:	
   210                           ;End of C runtime variable initialization code
   211                           
   212  01A0                     __end_of__initialization:	
   213  01A0  0183               	clrf	3
   214  01A1  120A  118A  2895   	ljmp	_main	;jump to C main() function
   215                           
   216                           	psect	bssCOMMON
   217  007C                     __pbssCOMMON:	
   218  007C                     _TemporizadorSerialR:	
   219  007C                     	ds	2
   220                           
   221                           	psect	bssBANK0
   222  0020                     __pbssBANK0:	
   223  0020                     _RTC:	
   224  0020                     	ds	2
   225  0022                     _Temporizador1:	
   226  0022                     	ds	2
   227  0024                     _temporizador:	
   228  0024                     	ds	2
   229  0026                     _BufferRead:	
   230  0026                     	ds	19
   231  0039                     _BufferWrite:	
   232  0039                     	ds	19
   233                           
   234                           	psect	dataBANK0
   235  005C                     __pdataBANK0:	
   236  005C                     _Tensao:	
   237  005C                     	ds	3
   238                           
   239                           	psect	clrtext
   240  01B9                     clear_ram0:	
   241                           ;	Called with FSR containing the base address, and
   242                           ;	W with the last address+1
   243                           
   244  01B9  0064               	clrwdt	;clear the watchdog before getting into this loop
   245  01BA                     clrloop0:	
   246  01BA  0180               	clrf	0	;clear RAM location pointed to by FSR
   247  01BB  0A84               	incf	4,f	;increment pointer
   248  01BC  0604               	xorwf	4,w	;XOR with final address
   249  01BD  1903               	btfsc	3,2	;have we reached the end yet?
   250  01BE  3400               	retlw	0	;all done for this memory range, return
   251  01BF  0604               	xorwf	4,w	;XOR again to restore value
   252  01C0  29BA               	goto	clrloop0	;do the next byte
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:	
   256  0070                     ??_estaVazia:	
   257  0070                     ??_remover:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ??_estaCheia:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ?_inserir:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_Serial_Interrupt:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_Interrupcao:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?_Setup:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_estaVazia:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?_remover:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ?_estaCheia:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_main:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     inserir@Valor:	
   288                           ; 2 bytes @ 0x0
   289                           
   290  0070                     estaVazia@buf:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     estaCheia@buf:	
   294                           ; 1 bytes @ 0x0
   295                           
   296                           
   297                           ; 1 bytes @ 0x0
   298  0070                     	ds	1
   299  0071                     ??_inserir:	
   300                           
   301                           ; 0 bytes @ 0x1
   302  0071                     	ds	2
   303  0073                     inserir@buf:	
   304  0073                     remover@temp:	
   305                           ; 1 bytes @ 0x3
   306                           
   307                           
   308                           ; 2 bytes @ 0x3
   309  0073                     	ds	2
   310  0075                     remover@buf:	
   311                           
   312                           ; 1 bytes @ 0x5
   313  0075                     	ds	1
   314  0076                     ??_Serial_Interrupt:	
   315                           
   316                           ; 0 bytes @ 0x6
   317  0076                     	ds	1
   318  0077                     ??_Interrupcao:	
   319                           
   320                           ; 0 bytes @ 0x7
   321  0077                     	ds	5
   322                           
   323                           	psect	cstackBANK0
   324  0057                     __pcstackBANK0:	
   325  0057                     ?_Serial_9600_Init:	
   326  0057                     Serial_9600_Init@osc_freq:	
   327                           ; 0 bytes @ 0x0
   328                           
   329                           
   330                           ; 2 bytes @ 0x0
   331  0057                     	ds	2
   332  0059                     ??_Serial_9600_Init:	
   333  0059                     ??_Setup:	
   334                           ; 0 bytes @ 0x2
   335                           
   336                           
   337                           ; 0 bytes @ 0x2
   338  0059                     	ds	1
   339  005A                     ??_main:	
   340                           
   341                           ; 0 bytes @ 0x3
   342  005A                     	ds	1
   343  005B                     main@estado:	
   344                           
   345                           ; 1 bytes @ 0x4
   346  005B                     	ds	1
   347                           
   348                           	psect	maintext
   349  0095                     __pmaintext:	
   350 ;;
   351 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   352 ;;
   353 ;; *************** function _main *****************
   354 ;; Defined at:
   355 ;;		line 149 in file "TCC_Main.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;  estado          1    4[BANK0 ] unsigned char 
   360 ;; Return value:  Size  Location     Type
   361 ;;                  2  162[COMMON] int 
   362 ;; Registers used:
   363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 17F/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   369 ;;      Params:         0       0       0       0       0
   370 ;;      Locals:         0       1       0       0       0
   371 ;;      Temps:          0       1       0       0       0
   372 ;;      Totals:         0       2       0       0       0
   373 ;;Total ram usage:        2 bytes
   374 ;; Hardware stack levels required when called:    5
   375 ;; This function calls:
   376 ;;		_Setup
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           
   383                           ;psect for function _main
   384  0095                     _main:	
   385                           
   386                           ;TCC_Main.c: 150: Setup();
   387                           
   388                           ;incstack = 0
   389                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   390  0095  120A  118A  20D0   	fcall	_Setup
      +       120A  118A         
   391                           
   392                           ;TCC_Main.c: 151: char estado = 0;
   393  009A  1283               	bcf	3,5	;RP0=0, select bank0
   394  009B  1303               	bcf	3,6	;RP1=0, select bank0
   395  009C                     L2:	
   396  009C  01DB               	clrf	main@estado
   397  009D                     l916:	
   398                           ;TCC_Main.c: 152: while(1)
   399                           
   400                           
   401                           ;TCC_Main.c: 153: {
   402                           ;TCC_Main.c: 163: if( temporizador == 0 )
   403  009D  0825               	movf	_temporizador+1,w
   404  009E  0424               	iorwf	_temporizador,w
   405  009F  1903               	btfsc	3,2
   406  00A0  28C1               	goto	l934
   407  00A1  289D               	goto	l916
   408  00A2                     l166:	
   409                           ;TCC_Main.c: 166: {
   410                           ;TCC_Main.c: 167: case 0:
   411                           
   412                           ;TCC_Main.c: 164: {
   413                           ;TCC_Main.c: 165: switch(estado)
   414                           
   415                           
   416                           ;TCC_Main.c: 168: PORTBbits.RB0 = 1;
   417  00A2  1406               	bsf	6,0	;volatile
   418                           
   419                           ;TCC_Main.c: 169: temporizador = 1000;
   420  00A3  30E8               	movlw	232
   421  00A4  00A4               	movwf	_temporizador
   422  00A5  3003               	movlw	3
   423  00A6  00A5               	movwf	_temporizador+1
   424                           
   425                           ;TCC_Main.c: 170: estado = 1;
   426  00A7  01DB               	clrf	main@estado
   427  00A8  0ADB               	incf	main@estado,f
   428                           
   429                           ;TCC_Main.c: 171: break;
   430  00A9  289D               	goto	l916
   431  00AA                     l168:	
   432                           ;TCC_Main.c: 172: case 1:
   433                           
   434                           
   435                           ;TCC_Main.c: 173: PORTBbits.RB0 = 0;
   436  00AA  1006               	bcf	6,0	;volatile
   437                           
   438                           ;TCC_Main.c: 174: temporizador = 30000;
   439  00AB  3030               	movlw	48
   440  00AC  00A4               	movwf	_temporizador
   441  00AD  3075               	movlw	117
   442  00AE  00A5               	movwf	_temporizador+1
   443                           
   444                           ;TCC_Main.c: 175: estado = 2;
   445  00AF  3002               	movlw	2
   446  00B0  28B7               	goto	L1
   447  00B1                     l169:	
   448                           ;TCC_Main.c: 177: case 2:
   449                           
   450                           ;TCC_Main.c: 176: break;
   451                           
   452                           
   453                           ;TCC_Main.c: 178: PORTBbits.RB1 = 1;
   454  00B1  1486               	bsf	6,1	;volatile
   455                           
   456                           ;TCC_Main.c: 179: temporizador = 1000;
   457  00B2  30E8               	movlw	232
   458  00B3  00A4               	movwf	_temporizador
   459  00B4  3003               	movlw	3
   460  00B5  00A5               	movwf	_temporizador+1
   461                           
   462                           ;TCC_Main.c: 180: estado = 3;
   463  00B6  3003               	movlw	3
   464  00B7                     L1:	
   465  00B7  00DA               	movwf	??_main
   466  00B8  085A               	movf	??_main,w
   467  00B9  00DB               	movwf	main@estado
   468                           
   469                           ;TCC_Main.c: 181: break;
   470  00BA  289D               	goto	l916
   471  00BB                     l170:	
   472                           ;TCC_Main.c: 182: case 3:
   473                           
   474                           
   475                           ;TCC_Main.c: 183: PORTBbits.RB1 = 0;
   476  00BB  1086               	bcf	6,1	;volatile
   477                           
   478                           ;TCC_Main.c: 184: temporizador = 30000;
   479  00BC  3030               	movlw	48
   480  00BD  00A4               	movwf	_temporizador
   481  00BE  3075               	movlw	117
   482  00BF  00A5               	movwf	_temporizador+1
   483  00C0  289C               	goto	L2
   484  00C1                     l934:	
   485                           ;TCC_Main.c: 187: }
   486                           
   487                           ;TCC_Main.c: 186: break;
   488                           
   489                           ;TCC_Main.c: 185: estado = 0;
   490                           
   491  00C1  085B               	movf	main@estado,w
   492                           
   493                           ; Switch size 1, requested type "space"
   494                           ; Number of cases is 4, Range of values is 0 to 3
   495                           ; switch strategies available:
   496                           ; Name         Instructions Cycles
   497                           ; simple_byte           13     7 (average)
   498                           ; direct_byte           20     8 (fixed)
   499                           ; jumptable            260     6 (fixed)
   500                           ; rangetable             8     6 (fixed)
   501                           ; spacedrange           14     9 (fixed)
   502                           ; locatedrange           4     3 (fixed)
   503                           ;	Chosen strategy is simple_byte
   504  00C2  3A00               	xorlw	0	; case 0
   505  00C3  1903               	skipnz
   506  00C4  28A2               	goto	l166
   507  00C5  3A01               	xorlw	1	; case 1
   508  00C6  1903               	skipnz
   509  00C7  28AA               	goto	l168
   510  00C8  3A03               	xorlw	3	; case 2
   511  00C9  1903               	skipnz
   512  00CA  28B1               	goto	l169
   513  00CB  3A01               	xorlw	1	; case 3
   514  00CC  1903               	skipnz
   515  00CD  28BB               	goto	l170
   516  00CE  289D               	goto	l916
   517  00CF  289D               	goto	l916
   518  00D0                     __end_of_main:	
   519                           
   520                           	psect	text1
   521  00D0                     __ptext1:	
   522 ;; *************** function _Setup *****************
   523 ;; Defined at:
   524 ;;		line 125 in file "TCC_Main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;		None               void
   531 ;; Registers used:
   532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          0       1       0       0       0
   541 ;;      Totals:         0       1       0       0       0
   542 ;;Total ram usage:        1 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    4
   545 ;; This function calls:
   546 ;;		_Serial_9600_Init
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _Setup
   554  00D0                     _Setup:	
   555                           
   556                           ;TCC_Main.c: 126: TRISB = 0;
   557                           
   558                           ;incstack = 0
   559                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   560  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   561  00D1  1303               	bcf	3,6	;RP1=0, select bank1
   562  00D2  0186               	clrf	6	;volatile
   563                           
   564                           ;TCC_Main.c: 127: PORTB = 0;
   565  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   566  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   567  00D5  0186               	clrf	6	;volatile
   568                           
   569                           ;TCC_Main.c: 128: TRISD = 0;
   570  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   571  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   572  00D8  0188               	clrf	8	;volatile
   573                           
   574                           ;TCC_Main.c: 129: PORTD = 0;
   575  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   576  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   577  00DB  0188               	clrf	8	;volatile
   578                           
   579                           ;TCC_Main.c: 131: OPTION_REG = 0b00000000;
   580  00DC  1683               	bsf	3,5	;RP0=1, select bank1
   581  00DD  1303               	bcf	3,6	;RP1=0, select bank1
   582  00DE  0181               	clrf	1	;volatile
   583                           
   584                           ;TCC_Main.c: 132: TMR0 = 130;
   585  00DF  3082               	movlw	130
   586  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   587  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   588  00E2  0081               	movwf	1	;volatile
   589                           
   590                           ;TCC_Main.c: 133: INTCON = 0b11100000;
   591  00E3  30E0               	movlw	224
   592  00E4  008B               	movwf	11	;volatile
   593                           
   594                           ;TCC_Main.c: 135: Serial_9600_Init(10);
   595  00E5  300A               	movlw	10
   596  00E6  00D7               	movwf	?_Serial_9600_Init
   597  00E7  3000               	movlw	0
   598  00E8  00D8               	movwf	?_Serial_9600_Init+1
   599  00E9  120A  118A  2103   	fcall	_Serial_9600_Init
   600                           
   601                           ;TCC_Main.c: 139: ModuloCM.status = 0b00001100;
   602  00EC  300C               	movlw	12
   603  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   604  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   605  00EF  00D9               	movwf	??_Setup
   606  00F0  0859               	movf	??_Setup,w
   607  00F1  00CE               	movwf	_ModuloCM
   608                           
   609                           ;TCC_Main.c: 140: ModuloCM.corrente[0] = 50;
   610  00F2  3032               	movlw	50
   611  00F3  00CF               	movwf	_ModuloCM+1
   612  00F4  3000               	movlw	0
   613  00F5  00D0               	movwf	_ModuloCM+2
   614                           
   615                           ;TCC_Main.c: 141: ModuloCM.corrente[1] = 34;
   616  00F6  3022               	movlw	34
   617  00F7  00D1               	movwf	_ModuloCM+3
   618  00F8  3000               	movlw	0
   619  00F9  00D2               	movwf	_ModuloCM+4
   620                           
   621                           ;TCC_Main.c: 142: ModuloCM.corrente[2] = 0;
   622  00FA  01D3               	clrf	_ModuloCM+5
   623  00FB  01D4               	clrf	_ModuloCM+6
   624                           
   625                           ;TCC_Main.c: 143: ModuloCM.corrente[3] = 0;
   626  00FC  01D5               	clrf	_ModuloCM+7
   627  00FD  01D6               	clrf	_ModuloCM+8
   628                           
   629                           ;TCC_Main.c: 145: TemporizadorSerialW = 20000;
   630  00FE  3020               	movlw	32
   631  00FF  00CC               	movwf	_TemporizadorSerialW
   632  0100  304E               	movlw	78
   633  0101  00CD               	movwf	_TemporizadorSerialW+1
   634  0102  0008               	return
   635  0103                     __end_of_Setup:	
   636                           
   637                           	psect	text2
   638  0103                     __ptext2:	
   639 ;; *************** function _Serial_9600_Init *****************
   640 ;; Defined at:
   641 ;;		line 7 in file "Serial.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  osc_freq        2    0[BANK0 ] int 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;		None               void
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       2       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0
   658 ;;      Totals:         0       2       0       0       0
   659 ;;Total ram usage:        2 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    3
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_Setup
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _Serial_9600_Init
   671  0103                     _Serial_9600_Init:	
   672                           
   673                           ;Serial.c: 8: TXSTA = 0b00100110;
   674                           
   675                           ;incstack = 0
   676                           ; Regs used in _Serial_9600_Init: [wreg-fsr0h+status,2+status,0]
   677  0103  3026               	movlw	38
   678  0104  1683               	bsf	3,5	;RP0=1, select bank1
   679  0105  1303               	bcf	3,6	;RP1=0, select bank1
   680  0106  0098               	movwf	24	;volatile
   681                           
   682                           ;Serial.c: 9: RCSTA = 0b10010000;
   683  0107  3090               	movlw	144
   684  0108  1283               	bcf	3,5	;RP0=0, select bank0
   685  0109  1303               	bcf	3,6	;RP1=0, select bank0
   686  010A  0098               	movwf	24	;volatile
   687                           
   688                           ;Serial.c: 10: switch(osc_freq)
   689  010B  2915               	goto	l828
   690  010C                     l820:	
   691                           ;Serial.c: 11: {
   692                           ;Serial.c: 12: case 10:
   693                           
   694                           
   695                           ;Serial.c: 13: SPBRG = 64;
   696  010C  3040               	movlw	64
   697  010D  2911               	goto	L4
   698  010E                     l822:	
   699                           ;Serial.c: 15: case 16:
   700                           
   701                           ;Serial.c: 14: break;
   702                           
   703                           
   704                           ;Serial.c: 16: SPBRG = 103;
   705  010E  3067               	movlw	103
   706  010F  2911               	goto	L4
   707  0110                     l824:	
   708                           ;Serial.c: 18: case 20:
   709                           
   710                           ;Serial.c: 17: break;
   711                           
   712                           
   713                           ;Serial.c: 19: SPBRG = 129;
   714  0110  3081               	movlw	129
   715  0111                     L4:	
   716  0111  1683               	bsf	3,5	;RP0=1, select bank1
   717  0112  1303               	bcf	3,6	;RP1=0, select bank1
   718  0113  0099               	movwf	25	;volatile
   719                           
   720                           ;Serial.c: 21: }
   721                           
   722                           ;Serial.c: 20: break;
   723  0114  2926               	goto	l35
   724  0115                     l828:	
   725                           
   726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   727                           ; Switch size 1, requested type "space"
   728                           ; Number of cases is 1, Range of values is 0 to 0
   729                           ; switch strategies available:
   730                           ; Name         Instructions Cycles
   731                           ; simple_byte            4     3 (average)
   732                           ; direct_byte           11     8 (fixed)
   733                           ; jumptable            260     6 (fixed)
   734                           ; rangetable             5     6 (fixed)
   735                           ; spacedrange            8     9 (fixed)
   736                           ; locatedrange           1     3 (fixed)
   737                           ;	Chosen strategy is simple_byte
   738  0115  1283               	bcf	3,5	;RP0=0, select bank0
   739  0116  0858               	movf	Serial_9600_Init@osc_freq+1,w
   740  0117  3A00               	xorlw	0	; case 0
   741  0118  1903               	skipnz
   742  0119  291B               	goto	l992
   743  011A  2926               	goto	l35
   744  011B                     l992:	
   745                           
   746                           ; Switch size 1, requested type "space"
   747                           ; Number of cases is 3, Range of values is 10 to 20
   748                           ; switch strategies available:
   749                           ; Name         Instructions Cycles
   750                           ; simple_byte           10     6 (average)
   751                           ; direct_byte           44    11 (fixed)
   752                           ; jumptable            263     9 (fixed)
   753                           ;	Chosen strategy is simple_byte
   754  011B  0857               	movf	Serial_9600_Init@osc_freq,w
   755  011C  3A0A               	xorlw	10	; case 10
   756  011D  1903               	skipnz
   757  011E  290C               	goto	l820
   758  011F  3A1A               	xorlw	26	; case 16
   759  0120  1903               	skipnz
   760  0121  290E               	goto	l822
   761  0122  3A04               	xorlw	4	; case 20
   762  0123  1903               	skipnz
   763  0124  2910               	goto	l824
   764  0125  2926               	goto	l35
   765  0126                     l35:	
   766                           
   767                           ;Serial.c: 23: PIE1bits.RCIE = 1;
   768  0126  1683               	bsf	3,5	;RP0=1, select bank1
   769  0127  1303               	bcf	3,6	;RP1=0, select bank1
   770  0128  168C               	bsf	12,5	;volatile
   771                           
   772                           ;Serial.c: 25: BufferWrite.primeiro = 0;
   773  0129  1283               	bcf	3,5	;RP0=0, select bank0
   774  012A  1303               	bcf	3,6	;RP1=0, select bank0
   775  012B  01C9               	clrf	_BufferWrite+16
   776                           
   777                           ;Serial.c: 26: BufferWrite.ultimo = 0;
   778  012C  01CA               	clrf	_BufferWrite+17
   779                           
   780                           ;Serial.c: 27: BufferWrite.nItens = 0;
   781  012D  01CB               	clrf	_BufferWrite+18
   782                           
   783                           ;Serial.c: 28: BufferRead.primeiro = 0;
   784  012E  01B6               	clrf	_BufferRead+16
   785                           
   786                           ;Serial.c: 29: BufferRead.ultimo = 0;
   787  012F  01B7               	clrf	_BufferRead+17
   788                           
   789                           ;Serial.c: 30: BufferRead.nItens = 0;
   790  0130  01B8               	clrf	_BufferRead+18
   791                           
   792                           ;Serial.c: 32: TXREG = 0x00;
   793  0131  0199               	clrf	25	;volatile
   794  0132  0008               	return
   795  0133                     __end_of_Serial_9600_Init:	
   796                           
   797                           	psect	text3
   798  0015                     __ptext3:	
   799 ;; *************** function _Interrupcao *****************
   800 ;; Defined at:
   801 ;;		line 51 in file "TCC_Main.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;		None               void
   808 ;; Registers used:
   809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0
   817 ;;      Temps:          5       0       0       0       0
   818 ;;      Totals:         5       0       0       0       0
   819 ;;Total ram usage:        5 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    2
   822 ;; This function calls:
   823 ;;		_Serial_Interrupt
   824 ;; This function is called by:
   825 ;;		Interrupt level 1
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _Interrupcao
   831  0015                     _Interrupcao:	
   832                           
   833                           ;TCC_Main.c: 52: if (INTCONbits.T0IF == 1)
   834  0015  1D0B               	btfss	11,2	;volatile
   835  0016  2844               	goto	i1l970
   836                           
   837                           ;TCC_Main.c: 53: {
   838                           ;TCC_Main.c: 54: INTCONbits.T0IF = 0;
   839  0017  110B               	bcf	11,2	;volatile
   840                           
   841                           ;TCC_Main.c: 55: TMR0 += 130;
   842  0018  3082               	movlw	130
   843  0019  00F7               	movwf	??_Interrupcao
   844  001A  0877               	movf	??_Interrupcao,w
   845  001B  0781               	addwf	1,f	;volatile
   846                           
   847                           ;TCC_Main.c: 56: if (temporizador > 0)
   848  001C  0825               	movf	_temporizador+1,w
   849  001D  0424               	iorwf	_temporizador,w
   850  001E  1903               	skipnz
   851  001F  2826               	goto	i1l135
   852                           
   853                           ;TCC_Main.c: 57: temporizador --;
   854  0020  3001               	movlw	1
   855  0021  02A4               	subwf	_temporizador,f
   856  0022  3000               	movlw	0
   857  0023  1C03               	skipc
   858  0024  03A5               	decf	_temporizador+1,f
   859  0025  02A5               	subwf	_temporizador+1,f
   860  0026                     i1l135:	
   861                           
   862                           ;TCC_Main.c: 58: if (Temporizador1 > 0)
   863  0026  0823               	movf	_Temporizador1+1,w
   864  0027  0422               	iorwf	_Temporizador1,w
   865  0028  1903               	skipnz
   866  0029  2830               	goto	i1l136
   867                           
   868                           ;TCC_Main.c: 59: Temporizador1 --;
   869  002A  3001               	movlw	1
   870  002B  02A2               	subwf	_Temporizador1,f
   871  002C  3000               	movlw	0
   872  002D  1C03               	skipc
   873  002E  03A3               	decf	_Temporizador1+1,f
   874  002F  02A3               	subwf	_Temporizador1+1,f
   875  0030                     i1l136:	
   876                           
   877                           ;TCC_Main.c: 60: if (TemporizadorSerialW > 0)
   878  0030  084D               	movf	_TemporizadorSerialW+1,w
   879  0031  044C               	iorwf	_TemporizadorSerialW,w
   880  0032  1903               	skipnz
   881  0033  283A               	goto	i1l137
   882                           
   883                           ;TCC_Main.c: 61: TemporizadorSerialW--;
   884  0034  3001               	movlw	1
   885  0035  02CC               	subwf	_TemporizadorSerialW,f
   886  0036  3000               	movlw	0
   887  0037  1C03               	skipc
   888  0038  03CD               	decf	_TemporizadorSerialW+1,f
   889  0039  02CD               	subwf	_TemporizadorSerialW+1,f
   890  003A                     i1l137:	
   891                           
   892                           ;TCC_Main.c: 62: if (TemporizadorSerialR > 0)
   893  003A  087D               	movf	_TemporizadorSerialR+1,w
   894  003B  047C               	iorwf	_TemporizadorSerialR,w
   895  003C  1903               	skipnz
   896  003D  2844               	goto	i1l970
   897                           
   898                           ;TCC_Main.c: 63: TemporizadorSerialR--;
   899  003E  3001               	movlw	1
   900  003F  02FC               	subwf	_TemporizadorSerialR,f
   901  0040  3000               	movlw	0
   902  0041  1C03               	skipc
   903  0042  03FD               	decf	_TemporizadorSerialR+1,f
   904  0043  02FD               	subwf	_TemporizadorSerialR+1,f
   905  0044                     i1l970:	
   906                           
   907                           ;TCC_Main.c: 64: }
   908                           ;TCC_Main.c: 66: Serial_Interrupt();
   909  0044  120A  118A  2056   	fcall	_Serial_Interrupt
      +       120A  118A         
   910  0049  087B               	movf	??_Interrupcao+4,w
   911  004A  1283               	bcf	3,5	;RP0=0, select bank0
   912  004B  1303               	bcf	3,6	;RP1=0, select bank0
   913  004C  00FF               	movwf	127
   914  004D  087A               	movf	??_Interrupcao+3,w
   915  004E  008A               	movwf	10
   916  004F  0879               	movf	??_Interrupcao+2,w
   917  0050  0084               	movwf	4
   918  0051  0E78               	swapf	(??_Interrupcao+1)^(0+-128),w
   919  0052  0083               	movwf	3
   920  0053  0EFE               	swapf	126,f
   921  0054  0E7E               	swapf	126,w
   922  0055  0009               	retfie
   923  0056                     __end_of_Interrupcao:	
   924                           
   925                           	psect	intentry
   926  0004                     __pintentry:	
   927                           ;incstack = 0
   928                           ; Regs used in _Interrupcao: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   929                           
   930  0004                     interrupt_function:	
   931  007E                     saved_w	set	btemp
   932  0004  00FE               	movwf	btemp
   933  0005  0E03               	swapf	3,w
   934  0006  00F8               	movwf	??_Interrupcao+1
   935  0007  0804               	movf	4,w
   936  0008  00F9               	movwf	??_Interrupcao+2
   937  0009  080A               	movf	10,w
   938  000A  00FA               	movwf	??_Interrupcao+3
   939  000B  1283               	bcf	3,5	;RP0=0, select bank0
   940  000C  1303               	bcf	3,6	;RP1=0, select bank0
   941  000D  087F               	movf	btemp+1,w
   942  000E  00FB               	movwf	??_Interrupcao+4
   943  000F  120A  118A  2815   	ljmp	_Interrupcao
   944                           
   945                           	psect	text4
   946  0056                     __ptext4:	
   947 ;; *************** function _Serial_Interrupt *****************
   948 ;; Defined at:
   949 ;;		line 36 in file "Serial.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;		None               void
   956 ;; Registers used:
   957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          1       0       0       0       0
   966 ;;      Totals:         1       0       0       0       0
   967 ;;Total ram usage:        1 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    1
   970 ;; This function calls:
   971 ;;		_estaVazia
   972 ;;		_remover
   973 ;;		_estaCheia
   974 ;;		_inserir
   975 ;; This function is called by:
   976 ;;		_Interrupcao
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           
   981                           ;psect for function _Serial_Interrupt
   982  0056                     _Serial_Interrupt:	
   983                           
   984                           ;Serial.c: 37: if (PIR1bits.TXIF == 1 && TXSTAbits.TRMT == 1)
   985                           
   986                           ;incstack = 0
   987                           ; Regs used in _Serial_Interrupt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   988  0056  1283               	bcf	3,5	;RP0=0, select bank0
   989  0057  1303               	bcf	3,6	;RP1=0, select bank0
   990  0058  1E0C               	btfss	12,4	;volatile
   991  0059  2873               	goto	i1l946
   992  005A  1683               	bsf	3,5	;RP0=1, select bank1
   993  005B  1303               	bcf	3,6	;RP1=0, select bank1
   994  005C  1C98               	btfss	24,1	;volatile
   995  005D  2873               	goto	i1l946
   996                           
   997                           ;Serial.c: 38: {
   998                           ;Serial.c: 39: PIR1bits.TXIF = 0;
   999  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1000  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0060  120C               	bcf	12,4	;volatile
  1002                           
  1003                           ;Serial.c: 40: if(!estaVazia(&BufferWrite))
  1004  0061  3039               	movlw	_BufferWrite& (0+255)
  1005  0062  120A  118A  21AF   	fcall	_estaVazia
      +       120A  118A         
  1006  0067  3800               	iorlw	0
  1007  0068  1D03               	skipz
  1008  0069  2873               	goto	i1l946
  1009                           
  1010                           ;Serial.c: 41: {
  1011                           ;Serial.c: 42: TXREG = remover(&BufferWrite);
  1012  006A  3039               	movlw	_BufferWrite& (0+255)
  1013  006B  120A  118A  2133   	fcall	_remover
      +       120A  118A         
  1014  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0072  0099               	movwf	25	;volatile
  1017  0073                     i1l946:	
  1018                           
  1019                           ;Serial.c: 43: }
  1020                           ;Serial.c: 44: }
  1021                           ;Serial.c: 46: if (PIR1bits.RCIF == 1)
  1022  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0075  1E8C               	btfss	12,5	;volatile
  1025  0076  0008               	return
  1026                           
  1027                           ;Serial.c: 47: {
  1028                           ;Serial.c: 49: PORTDbits.RD0 ^= 1;
  1029  0077  0808               	movf	8,w	;volatile
  1030  0078  3901               	andlw	1
  1031  0079  00F6               	movwf	??_Serial_Interrupt
  1032  007A  3001               	movlw	1
  1033  007B  06F6               	xorwf	??_Serial_Interrupt,f
  1034  007C  0808               	movf	8,w	;volatile
  1035  007D  0676               	xorwf	??_Serial_Interrupt,w
  1036  007E  39FE               	andlw	-2
  1037  007F  0676               	xorwf	??_Serial_Interrupt,w
  1038  0080  0088               	movwf	8	;volatile
  1039                           
  1040                           ;Serial.c: 50: if(!estaCheia(&BufferRead))
  1041  0081  3026               	movlw	_BufferRead& (0+255)
  1042  0082  120A  118A  21A4   	fcall	_estaCheia
      +       120A  118A         
  1043  0087  3800               	iorlw	0
  1044  0088  1D03               	skipz
  1045  0089  0008               	return
  1046                           
  1047                           ;Serial.c: 51: inserir(&BufferRead, RCREG);
  1048  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1049  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1050  008C  081A               	movf	26,w	;volatile
  1051  008D  00F6               	movwf	??_Serial_Interrupt
  1052  008E  0876               	movf	??_Serial_Interrupt,w
  1053  008F  00F0               	movwf	?_inserir
  1054  0090  3026               	movlw	_BufferRead& (0+255)
  1055  0091  120A  118A  215D   	fcall	_inserir
  1056  0094  0008               	return
  1057  0095                     __end_of_Serial_Interrupt:	
  1058                           
  1059                           	psect	text5
  1060  015D                     __ptext5:	
  1061 ;; *************** function _inserir *****************
  1062 ;; Defined at:
  1063 ;;		line 82 in file "Serial.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  buf             1    wreg     PTR struct fila
  1066 ;;		 -> BufferRead(19), BufferWrite(19), 
  1067 ;;  Valor           1    0[COMMON] unsigned char 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  buf             1    3[COMMON] PTR struct fila
  1070 ;;		 -> BufferRead(19), BufferWrite(19), 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;		None               void
  1073 ;; Registers used:
  1074 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         1       0       0       0       0
  1081 ;;      Locals:         1       0       0       0       0
  1082 ;;      Temps:          2       0       0       0       0
  1083 ;;      Totals:         4       0       0       0       0
  1084 ;;Total ram usage:        4 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_Serial_Interrupt
  1090 ;;		_Serial_Write
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           
  1095                           ;psect for function _inserir
  1096  015D                     _inserir:	
  1097                           
  1098                           ;incstack = 0
  1099                           ; Regs used in _inserir: [wreg-fsr0h+status,2+status,0]
  1100                           ;inserir@buf stored from wreg
  1101  015D  00F3               	movwf	inserir@buf
  1102                           
  1103                           ;Serial.c: 83: buf->dados[buf->ultimo] = Valor;
  1104  015E  0870               	movf	inserir@Valor,w
  1105  015F  00F1               	movwf	??_inserir
  1106  0160  0873               	movf	inserir@buf,w
  1107  0161  3E11               	addlw	17
  1108  0162  0084               	movwf	4
  1109  0163  1383               	bcf	3,7	;select IRP bank0
  1110  0164  0800               	movf	0,w
  1111  0165  0773               	addwf	inserir@buf,w
  1112  0166  00F2               	movwf	??_inserir+1
  1113  0167  0872               	movf	??_inserir+1,w
  1114  0168  0084               	movwf	4
  1115  0169  0871               	movf	??_inserir,w
  1116  016A  0080               	movwf	0
  1117                           
  1118                           ;Serial.c: 84: buf->ultimo++;
  1119  016B  3001               	movlw	1
  1120  016C  00F1               	movwf	??_inserir
  1121  016D  0873               	movf	inserir@buf,w
  1122  016E  3E11               	addlw	17
  1123  016F  0084               	movwf	4
  1124  0170  0871               	movf	??_inserir,w
  1125  0171  0780               	addwf	0,f
  1126                           
  1127                           ;Serial.c: 85: buf->nItens++;
  1128  0172  3001               	movlw	1
  1129  0173  00F1               	movwf	??_inserir
  1130  0174  0873               	movf	inserir@buf,w
  1131  0175  3E12               	addlw	18
  1132  0176  0084               	movwf	4
  1133  0177  0871               	movf	??_inserir,w
  1134  0178  0780               	addwf	0,f
  1135                           
  1136                           ;Serial.c: 87: if(buf->ultimo == 16)
  1137  0179  0873               	movf	inserir@buf,w
  1138  017A  3E11               	addlw	17
  1139  017B  0084               	movwf	4
  1140  017C  0800               	movf	0,w
  1141  017D  3A10               	xorlw	16
  1142  017E  1D03               	skipz
  1143  017F  0008               	return
  1144                           
  1145                           ;Serial.c: 88: buf->ultimo = 0;
  1146  0180  0873               	movf	inserir@buf,w
  1147  0181  3E11               	addlw	17
  1148  0182  0084               	movwf	4
  1149  0183  0180               	clrf	0
  1150  0184  0008               	return
  1151  0185                     __end_of_inserir:	
  1152                           
  1153                           	psect	text6
  1154  01A4                     __ptext6:	
  1155 ;; *************** function _estaCheia *****************
  1156 ;; Defined at:
  1157 ;;		line 108 in file "Serial.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  buf             1    wreg     PTR struct fila
  1160 ;;		 -> BufferRead(19), BufferWrite(19), 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  buf             1    0[COMMON] PTR struct fila
  1163 ;;		 -> BufferRead(19), BufferWrite(19), 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      unsigned char 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr0l, fsr0h
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         1       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         1       0       0       0       0
  1177 ;;Total ram usage:        1 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_Serial_Interrupt
  1183 ;;		_Serial_Write
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _estaCheia
  1189  01A4                     _estaCheia:	
  1190                           
  1191                           ;incstack = 0
  1192                           ; Regs used in _estaCheia: [wregfsr0]
  1193                           ;estaCheia@buf stored from wreg
  1194  01A4  00F0               	movwf	estaCheia@buf
  1195                           
  1196                           ;Serial.c: 109: return (buf->nItens==16);
  1197  01A5  0870               	movf	estaCheia@buf,w
  1198  01A6  3E12               	addlw	18
  1199  01A7  0084               	movwf	4
  1200  01A8  1383               	bcf	3,7	;select IRP bank0
  1201  01A9  0800               	movf	0,w
  1202  01AA  3A10               	xorlw	16
  1203  01AB  3000               	movlw	0
  1204  01AC  1903               	skipnz
  1205  01AD  3001               	movlw	1
  1206  01AE  0008               	return
  1207  01AF                     __end_of_estaCheia:	
  1208                           
  1209                           	psect	text7
  1210  0133                     __ptext7:	
  1211 ;; *************** function _remover *****************
  1212 ;; Defined at:
  1213 ;;		line 92 in file "Serial.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  buf             1    wreg     PTR struct fila
  1216 ;;		 -> BufferRead(19), BufferWrite(19), 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  buf             1    5[COMMON] PTR struct fila
  1219 ;;		 -> BufferRead(19), BufferWrite(19), 
  1220 ;;  temp            2    3[COMMON] int 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      unsigned char 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         3       0       0       0       0
  1232 ;;      Temps:          3       0       0       0       0
  1233 ;;      Totals:         6       0       0       0       0
  1234 ;;Total ram usage:        6 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_Serial_Interrupt
  1240 ;;		_Serial_Read
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           
  1245                           ;psect for function _remover
  1246  0133                     _remover:	
  1247                           
  1248                           ;incstack = 0
  1249                           ; Regs used in _remover: [wreg-fsr0h+status,2+status,0]
  1250                           ;remover@buf stored from wreg
  1251  0133  00F5               	movwf	remover@buf
  1252                           
  1253                           ;Serial.c: 93: int temp = buf->dados[buf->primeiro++];
  1254  0134  0875               	movf	remover@buf,w
  1255  0135  3E10               	addlw	16
  1256  0136  0084               	movwf	4
  1257  0137  1383               	bcf	3,7	;select IRP bank0
  1258  0138  0800               	movf	0,w
  1259  0139  0775               	addwf	remover@buf,w
  1260  013A  00F0               	movwf	??_remover
  1261  013B  0870               	movf	??_remover,w
  1262  013C  0084               	movwf	4
  1263  013D  0800               	movf	0,w
  1264  013E  00F1               	movwf	??_remover+1
  1265  013F  01F2               	clrf	??_remover+2
  1266  0140  0871               	movf	??_remover+1,w
  1267  0141  00F3               	movwf	remover@temp
  1268  0142  0872               	movf	??_remover+2,w
  1269  0143  00F4               	movwf	remover@temp+1
  1270  0144  3001               	movlw	1
  1271  0145  00F0               	movwf	??_remover
  1272  0146  0875               	movf	remover@buf,w
  1273  0147  3E10               	addlw	16
  1274  0148  0084               	movwf	4
  1275  0149  0870               	movf	??_remover,w
  1276  014A  0780               	addwf	0,f
  1277                           
  1278                           ;Serial.c: 95: if(buf->primeiro == 16)
  1279  014B  0875               	movf	remover@buf,w
  1280  014C  3E10               	addlw	16
  1281  014D  0084               	movwf	4
  1282  014E  0800               	movf	0,w
  1283  014F  3A10               	xorlw	16
  1284  0150  1D03               	skipz
  1285  0151  2956               	goto	i1l846
  1286                           
  1287                           ;Serial.c: 96: buf->primeiro = 0;
  1288  0152  0875               	movf	remover@buf,w
  1289  0153  3E10               	addlw	16
  1290  0154  0084               	movwf	4
  1291  0155  0180               	clrf	0
  1292  0156                     i1l846:	
  1293                           
  1294                           ;Serial.c: 98: buf->nItens--;
  1295  0156  0875               	movf	remover@buf,w
  1296  0157  3E12               	addlw	18
  1297  0158  0084               	movwf	4
  1298  0159  3001               	movlw	1
  1299  015A  0280               	subwf	0,f
  1300                           
  1301                           ;Serial.c: 99: return temp;
  1302  015B  0873               	movf	remover@temp,w
  1303  015C  0008               	return
  1304  015D                     __end_of_remover:	
  1305                           
  1306                           	psect	text8
  1307  01AF                     __ptext8:	
  1308 ;; *************** function _estaVazia *****************
  1309 ;; Defined at:
  1310 ;;		line 103 in file "Serial.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  buf             1    wreg     PTR struct fila
  1313 ;;		 -> BufferRead(19), BufferWrite(19), 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  buf             1    0[COMMON] PTR struct fila
  1316 ;;		 -> BufferRead(19), BufferWrite(19), 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      unsigned char 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr0l, fsr0h
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         0       0       0       0       0
  1327 ;;      Locals:         1       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0
  1329 ;;      Totals:         1       0       0       0       0
  1330 ;;Total ram usage:        1 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_Serial_Interrupt
  1336 ;;		_Serial_Read
  1337 ;;		_Serial_Available
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _estaVazia
  1343  01AF                     _estaVazia:	
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in _estaVazia: [wregfsr0]
  1347                           ;estaVazia@buf stored from wreg
  1348  01AF  00F0               	movwf	estaVazia@buf
  1349                           
  1350                           ;Serial.c: 104: return (buf->nItens==0);
  1351  01B0  0870               	movf	estaVazia@buf,w
  1352  01B1  3E12               	addlw	18
  1353  01B2  0084               	movwf	4
  1354  01B3  1383               	bcf	3,7	;select IRP bank0
  1355  01B4  0880               	movf	0,f
  1356  01B5  3000               	movlw	0
  1357  01B6  1903               	skipnz
  1358  01B7  3001               	movlw	1
  1359  01B8  0008               	return
  1360  01B9                     __end_of_estaVazia:	
  1361  007E                     btemp	set	126	;btemp
  1362  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         46
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      5      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    estaCheia@buf	PTR struct fila size(1) Largest target is 19
		 -> BufferRead(BANK0[19]), BufferWrite(BANK0[19]), 

    estaVazia@buf	PTR struct fila size(1) Largest target is 19
		 -> BufferRead(BANK0[19]), BufferWrite(BANK0[19]), 

    remover@buf	PTR struct fila size(1) Largest target is 19
		 -> BufferRead(BANK0[19]), BufferWrite(BANK0[19]), 

    inserir@buf	PTR struct fila size(1) Largest target is 19
		 -> BufferRead(BANK0[19]), BufferWrite(BANK0[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrupcao in COMMON

    _Interrupcao->_Serial_Interrupt
    _Serial_Interrupt->_remover

Critical Paths under _main in BANK0

    _main->_Setup
    _Setup->_Serial_9600_Init

Critical Paths under _Interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      49
                                              3 BANK0      2     2      0
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0      22
                                              2 BANK0      1     1      0
                   _Serial_9600_Init
 ---------------------------------------------------------------------------------
 (2) _Serial_9600_Init                                     2     0      2      22
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Interrupcao                                          5     5      0     353
                                              7 COMMON     5     5      0
                   _Serial_Interrupt
 ---------------------------------------------------------------------------------
 (4) _Serial_Interrupt                                     1     1      0     353
                                              6 COMMON     1     1      0
                          _estaVazia
                            _remover
                          _estaCheia
                            _inserir
 ---------------------------------------------------------------------------------
 (5) _inserir                                              4     3      1     154
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _estaCheia                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _remover                                              6     6      0     155
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (5) _estaVazia                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _Serial_9600_Init

 _Interrupcao (ROOT)
   _Serial_Interrupt
     _estaVazia
     _remover
     _estaCheia
     _inserir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      5      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      55      12        0.0%
ABS                  0      0      4D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       8       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Oct 07 11:55:42 2016

              __CFG_CP$OFF 0000                         l35 0126                         fsr 0004  
                      l170 00BB                        l166 00A2                        l168 00AA  
                      l169 00B1                        l820 010C                        l822 010E  
                      l824 0110                        l828 0115                        l916 009D  
                      l934 00C1                        l992 011B               __CFG_CPD$OFF 0000  
                      _RTC 0020                        fsr0 0004                        indf 0000  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       _TMR0 0001  
             __CFG_WRT$OFF 0000                       _main 0095                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0012                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      i1l135 0026                      i1l136 0030  
                    i1l137 003A                      i1l846 0156                      i1l946 0073  
                    i1l970 0044                      _RCREG 001A                      _RCSTA 0018  
                    _SPBRG 0099                      _PORTB 0006                      _PORTD 0008  
               _BufferRead 0026                      _TRISB 0086                      _TRISD 0088  
                    _TXREG 0019                      _TXSTA 0098                      _Setup 00D0  
      _TemporizadorSerialR 007C        _TemporizadorSerialW 004C            __end_of_inserir 0185  
                    pclath 000A            __end_of_remover 015D                      status 0003  
                    wtemp0 007E              ??_Interrupcao 0077            __initialization 0185  
             __end_of_main 00D0                     ??_main 005A                     ?_Setup 0070  
         _Serial_9600_Init 0103                     _INTCON 000B                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
              _BufferWrite 0039             __CFG_PWRTE$OFF 0000                     _Tensao 005C  
      __end_of_Interrupcao 0056                  ??_inserir 0071               estaCheia@buf 0070  
                   saved_w 007E                  ??_remover 0070    __end_of__initialization 01A0  
           __pcstackCOMMON 0070              __end_of_Setup 0103               __pidataBANK0 01C1  
__size_of_Serial_Interrupt 003F                    ??_Setup 0059                 __pbssBANK0 0020  
       __size_of_estaCheia 000B         __size_of_estaVazia 000A               estaVazia@buf 0070  
              _Interrupcao 0015                 __pmaintext 0095                 __pintentry 0004  
                  _SSPCON2 0091                    _SSPSTAT 0094   __end_of_Serial_9600_Init 0133  
        __end_of_estaCheia 01AF                    __ptext1 00D0                    __ptext2 0103  
                  __ptext3 0015                    __ptext4 0056                    __ptext5 015D  
                  __ptext6 01A4                    __ptext7 0133                    __ptext8 01AF  
        __end_of_estaVazia 01B9                remover@temp 0073                    _inserir 015D  
                  _remover 0133                    clrloop0 01BA       end_of_initialization 01A0  
         _Serial_Interrupt 0056                  _PORTBbits 0006                  _PORTDbits 0008  
                _TXSTAbits 0098                 main@estado 005B   Serial_9600_Init@osc_freq 0057  
             inserir@Valor 0070        start_initialization 0185               ?_Interrupcao 0070  
              __pdataBANK0 005C                __pbssCOMMON 007C              __pcstackBANK0 0057  
               inserir@buf 0073                  __pnvBANK0 004C          ?_Serial_9600_Init 0057  
       ??_Serial_9600_Init 0059                  _estaCheia 01A4                   ?_inserir 0070  
                _estaVazia 01AF                   ?_remover 0070             __size_of_Setup 0033  
            _Temporizador1 0022   __end_of_Serial_Interrupt 0095                 remover@buf 0075  
        interrupt_function 0004                  clear_ram0 01B9                   _PIE1bits 008C  
                 _PIR1bits 000C                 ?_estaCheia 0070                 ?_estaVazia 0070  
                 _ModuloCM 004E       __size_of_Interrupcao 0041           __size_of_inserir 0028  
         __size_of_remover 002A              __size_of_main 003B                ??_estaCheia 0070  
               _INTCONbits 000B                ??_estaVazia 0070                   intlevel1 0000  
             _temporizador 0024                 _OPTION_REG 0081                _SSPCON2bits 0091  
__size_of_Serial_9600_Init 0030          ?_Serial_Interrupt 0070         ??_Serial_Interrupt 0076  
